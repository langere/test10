{"ast":null,"code":"var _jsxFileName = \"D:\\\\web\\\\8\\\\src\\\\components\\\\Board.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './styles.css'; // 确保引入样式文件\n\n// 定义棋盘大小\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BOARD_SIZE = 15;\n\n// 判断胜负的函数\nconst checkWin = (board, rowIndex, cellIndex, player) => {\n  // 检查横向\n  let count = 0;\n  for (let j = cellIndex - 4; j <= cellIndex + 4; j++) {\n    if (j >= 0 && j < BOARD_SIZE && board[rowIndex][j] === player) {\n      count++;\n      if (count === 5) {\n        return true;\n      }\n    } else {\n      count = 0;\n    }\n  }\n  // 检查纵向\n  count = 0;\n  for (let i = rowIndex - 4; i <= rowIndex + 4; i++) {\n    if (i >= 0 && i < BOARD_SIZE && board[i][cellIndex] === player) {\n      count++;\n      if (count === 5) {\n        return true;\n      }\n    } else {\n      count = 0;\n    }\n  }\n  // 检查正斜向\n  count = 0;\n  for (let k = -4; k <= 4; k++) {\n    let i = rowIndex + k;\n    let j = cellIndex + k;\n    if (i >= 0 && i < BOARD_SIZE && j >= 0 && j < BOARD_SIZE && board[i][j] === player) {\n      count++;\n      if (count === 5) {\n        return true;\n      }\n    } else {\n      count = 0;\n    }\n  }\n  // 检查反斜向\n  count = 0;\n  for (let k = -4; k <= 4; k++) {\n    let i = rowIndex + k;\n    let j = cellIndex - k;\n    if (i >= 0 && i < BOARD_SIZE && j >= 0 && j < BOARD_SIZE && board[i][j] === player) {\n      count++;\n      if (count === 5) {\n        return true;\n      }\n    } else {\n      count = 0;\n    }\n  }\n  return false;\n};\nconst Board = () => {\n  _s();\n  // 棋盘状态，使用二维数组表示，0表示无棋子，1表示黑棋，2表示白棋\n  const [board, setBoard] = useState(() => {\n    const initialBoard = [];\n    for (let i = 0; i < BOARD_SIZE; i++) {\n      initialBoard[i] = [];\n      for (let j = 0; j < BOARD_SIZE; j++) {\n        initialBoard[i][j] = 0;\n      }\n    }\n    return initialBoard;\n  });\n  // 当前落子玩家，1为黑棋，2为白棋\n  const [currentPlayer, setCurrentPlayer] = useState(1);\n\n  // 处理点击棋盘格子的事件函数\n  const handleClick = (rowIndex, cellIndex) => {\n    if (board[rowIndex][cellIndex] !== 0) {\n      return; // 防止重复落子\n    }\n    const newBoard = [...board];\n    newBoard[rowIndex][cellIndex] = currentPlayer;\n    // 调用checkWin函数判断是否获胜\n    if (checkWin(newBoard, rowIndex, cellIndex, currentPlayer)) {\n      const playerName = currentPlayer === 1 ? '黑棋' : '白棋';\n      alert(`${playerName}获胜！`);\n    } else {\n      // 若未获胜，切换当前玩家\n      setCurrentPlayer(currentPlayer === 1 ? 2 : 1);\n    }\n    setBoard(newBoard);\n  };\n\n  // 重置游戏\n  const resetGame = () => {\n    const initialBoard = [];\n    for (let i = 0; i < BOARD_SIZE; i++) {\n      initialBoard[i] = [];\n      for (let j = 0; j < BOARD_SIZE; j++) {\n        initialBoard[i][j] = 0;\n      }\n    }\n    setBoard(initialBoard);\n    setCurrentPlayer(1);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [board.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex'\n      },\n      children: row.map((cell, cellIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '30px',\n          height: '30px',\n          border: '1px solid black',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          backgroundColor: (rowIndex + cellIndex) % 2 === 0 ? '#f0d9b5' : '#b58863'\n        },\n        className: cell === 1 ? 'black-piece' : cell === 2 ? 'white-piece' : '',\n        onClick: () => handleClick(rowIndex, cellIndex),\n        children: cell === 1 ? '●' : cell === 2 ? '○' : ''\n      }, cellIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }, this))\n    }, rowIndex, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: resetGame,\n      children: \"\\u91CD\\u7F6E\\u6E38\\u620F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n};\n_s(Board, \"NaLH5s4cc19zjCZ0qcwZlHTrvhY=\");\n_c = Board;\nexport default Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","BOARD_SIZE","checkWin","board","rowIndex","cellIndex","player","count","j","i","k","Board","_s","setBoard","initialBoard","currentPlayer","setCurrentPlayer","handleClick","newBoard","playerName","alert","resetGame","children","map","row","style","display","cell","width","height","border","alignItems","justifyContent","backgroundColor","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/web/8/src/components/Board.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './styles.css'; // 确保引入样式文件\r\n\r\n// 定义棋盘大小\r\nconst BOARD_SIZE = 15;\r\n\r\n// 判断胜负的函数\r\nconst checkWin = (board, rowIndex, cellIndex, player) => {\r\n  // 检查横向\r\n  let count = 0;\r\n  for (let j = cellIndex - 4; j <= cellIndex + 4; j++) {\r\n    if (j >= 0 && j < BOARD_SIZE && board[rowIndex][j] === player) {\r\n      count++;\r\n      if (count === 5) {\r\n        return true;\r\n      }\r\n    } else {\r\n      count = 0;\r\n    }\r\n  }\r\n  // 检查纵向\r\n  count = 0;\r\n  for (let i = rowIndex - 4; i <= rowIndex + 4; i++) {\r\n    if (i >= 0 && i < BOARD_SIZE && board[i][cellIndex] === player) {\r\n      count++;\r\n      if (count === 5) {\r\n        return true;\r\n      }\r\n    } else {\r\n      count = 0;\r\n    }\r\n  }\r\n  // 检查正斜向\r\n  count = 0;\r\n  for (let k = -4; k <= 4; k++) {\r\n    let i = rowIndex + k;\r\n    let j = cellIndex + k;\r\n    if (i >= 0 && i < BOARD_SIZE && j >= 0 && j < BOARD_SIZE && board[i][j] === player) {\r\n      count++;\r\n      if (count === 5) {\r\n        return true;\r\n      }\r\n    } else {\r\n      count = 0;\r\n    }\r\n  }\r\n  // 检查反斜向\r\n  count = 0;\r\n  for (let k = -4; k <= 4; k++) {\r\n    let i = rowIndex + k;\r\n    let j = cellIndex - k;\r\n    if (i >= 0 && i < BOARD_SIZE && j >= 0 && j < BOARD_SIZE && board[i][j] === player) {\r\n      count++;\r\n      if (count === 5) {\r\n        return true;\r\n      }\r\n    } else {\r\n      count = 0;\r\n    }\r\n  }\r\n  return false;\r\n};\r\n\r\nconst Board = () => {\r\n  // 棋盘状态，使用二维数组表示，0表示无棋子，1表示黑棋，2表示白棋\r\n  const [board, setBoard] = useState(() => {\r\n    const initialBoard = [];\r\n    for (let i = 0; i < BOARD_SIZE; i++) {\r\n      initialBoard[i] = [];\r\n      for (let j = 0; j < BOARD_SIZE; j++) {\r\n        initialBoard[i][j] = 0;\r\n      }\r\n    }\r\n    return initialBoard;\r\n  });\r\n  // 当前落子玩家，1为黑棋，2为白棋\r\n  const [currentPlayer, setCurrentPlayer] = useState(1);\r\n\r\n  // 处理点击棋盘格子的事件函数\r\n  const handleClick = (rowIndex, cellIndex) => {\r\n    if (board[rowIndex][cellIndex] !== 0) {\r\n      return; // 防止重复落子\r\n    }\r\n    const newBoard = [...board];\r\n    newBoard[rowIndex][cellIndex] = currentPlayer;\r\n    // 调用checkWin函数判断是否获胜\r\n    if (checkWin(newBoard, rowIndex, cellIndex, currentPlayer)) {\r\n      const playerName = currentPlayer === 1 ? '黑棋' : '白棋';\r\n      alert(`${playerName}获胜！`);\r\n    } else {\r\n      // 若未获胜，切换当前玩家\r\n      setCurrentPlayer(currentPlayer === 1 ? 2 : 1);\r\n    }\r\n    setBoard(newBoard);\r\n  };\r\n\r\n  // 重置游戏\r\n  const resetGame = () => {\r\n    const initialBoard = [];\r\n    for (let i = 0; i < BOARD_SIZE; i++) {\r\n      initialBoard[i] = [];\r\n      for (let j = 0; j < BOARD_SIZE; j++) {\r\n        initialBoard[i][j] = 0;\r\n      }\r\n    }\r\n    setBoard(initialBoard);\r\n    setCurrentPlayer(1);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {board.map((row, rowIndex) => (\r\n        <div key={rowIndex} style={{ display: 'flex' }}>\r\n          {row.map((cell, cellIndex) => (\r\n            <div\r\n              key={cellIndex}\r\n              style={{\r\n                width: '30px',\r\n                height: '30px',\r\n                border: '1px solid black',\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n                backgroundColor: (rowIndex + cellIndex) % 2 === 0? '#f0d9b5' : '#b58863'\r\n              }}\r\n              className={cell === 1 ? 'black-piece' : cell === 2 ? 'white-piece' : ''}\r\n              onClick={() => handleClick(rowIndex, cellIndex)}\r\n            >\r\n              {cell === 1 ? '●' : cell === 2 ? '○' : ''}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ))}\r\n      <button onClick={resetGame}>重置游戏</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Board;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}